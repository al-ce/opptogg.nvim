-- local config = {
--
--   opp_table = {
--     ["True"]  = "False",
--     ["true"]  = "false",
--     ["0"]     = "1",
--     ["yes"]   = "no",
--     ["Yes"]   = "No",
--     ["foo"]   = "bar",
--     ["var1"]  = "var2",
--     ["print"] = "input",
--
--     -- TODO: the regex \k doesn't capture these
--     -- opps["+"]    = "-"
--     -- opps["*"]    = "/"
--     -- opps["="]    = "!="
--   },
--   cmd_center = false,
-- }
--
-- local type_check = function(table)
--   for _, v in pairs(table) do
--
--     if type(v) ~= "string" then
--       error("[OppTogg] opp_table keys and values must be str type")
--       return false
--     end
--   end
-- end
--
--
-- local user_config = function(opts)
--   opts = opts or {}
--
--   if next(opts) == nil then
--     return
--   end
--
--   for k, v in pairs(opts) do
--     if config[k] == nil then
--       error(string.format('[OppTogg] Key %s does not exist in config values', k))
--       return
--     end
--
--     if k == 'opp_table' then
--       if not type_check(k) then
--         return
--       end
--     end
--
--     config[k] = v
--   end
-- end
--
--
-- function config.return_opp_table()
--   return config['opp_table']
-- end
--
-- return config
